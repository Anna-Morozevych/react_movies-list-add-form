{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","isTitleError","isImgUrlError","isImdbUrlError","isImdbIdError","handleChange","event","target","name","value","newKey","charAt","toUpperCase","slice","setProp","controlValidUrl","setState","handleBlur","preventDefault","handleSubmit","props","addMovie","reset","url","test","controlButtonDisabled","this","onSubmit","htmlFor","id","type","placeholder","onChange","onBlur","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f5c8022.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (obj: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isTitleError: boolean,\n  isImgUrlError: boolean,\n  isImdbUrlError: boolean,\n  isImdbIdError: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isTitleError: false,\n    isImgUrlError: false,\n    isImdbUrlError: false,\n    isImdbIdError: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    const newKey = name.charAt(0).toUpperCase() + name.slice(1);\n    const setProp = `is${[newKey]}Error`;\n\n    if ((name === 'imgUrl' || name === 'imdbUrl')\n      && !this.controlValidUrl(value)) {\n      this.setState({ [setProp]: true } as unknown as State);\n    } else {\n      this.setState({ [setProp]: false } as unknown as State);\n    }\n\n    this.setState({ [name]: value } as Pick<Movie, keyof Movie>);\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name, value } = event.target;\n    const newKey = name.charAt(0).toUpperCase() + name.slice(1);\n    const setProp = `is${[newKey]}Error`;\n\n    if (!value) {\n      this.setState({ [setProp]: true } as unknown as State);\n    } else {\n      event.preventDefault();\n    }\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.addMovie(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  controlValidUrl = (url: string) => {\n    const re = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return re.test(url);\n  };\n\n  controlButtonDisabled = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (!title || !imgUrl || !imdbUrl || !imdbId\n    || !this.controlValidUrl(imgUrl) || !this.controlValidUrl(imdbUrl));\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isTitleError,\n      isImgUrlError,\n      isImdbUrlError,\n      isImdbIdError,\n    } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor={title}>\n          {'Title* '}\n\n          <span className=\"NewMovie__label-error\">\n            {isTitleError && 'This field is required'}\n          </span>\n\n          <input\n            className={`NewMovie__input ${isTitleError ? 'NewMovie__input--error' : ''}`}\n            id={title}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n          />\n        </label>\n\n        <label\n          htmlFor={description}\n        >\n          {'Description '}\n          <textarea\n            className=\"NewMovie__input\"\n            id={description}\n            name=\"description\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor={imgUrl}>\n          {'ImgUrl* '}\n          <span className=\"NewMovie__label-error\">\n            {isImgUrlError && 'Url is not correct'}\n          </span>\n\n          <input\n            className={`NewMovie__input ${isImgUrlError ? 'NewMovie__input--error' : ''}`}\n            id={imgUrl}\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"ImgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n          />\n        </label>\n\n        <label htmlFor={imdbUrl}>\n          {'ImdbUrl* '}\n          <span className=\"NewMovie__label-error\">\n            {isImdbUrlError && 'Url is not correct'}\n          </span>\n\n          <input\n            className={`NewMovie__input ${isImdbUrlError ? 'NewMovie__input--error' : ''}`}\n            id={imdbUrl}\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"ImdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n          />\n        </label>\n\n        <label htmlFor={imdbId}>\n          {'ImdbId* '}\n          <span className=\"NewMovie__label-error\">\n            {isImdbIdError && 'This field is required'}\n          </span>\n\n          <input\n            className={`NewMovie__input ${isImdbIdError ? 'NewMovie__input--error' : ''}`}\n            id={imdbId}\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n          />\n        </label>\n\n        <button\n          className=\"NewMovie__button\"\n          type=\"submit\"\n          disabled={this.controlButtonDisabled()}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (movie: Movie): void => (\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }))\n  );\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}